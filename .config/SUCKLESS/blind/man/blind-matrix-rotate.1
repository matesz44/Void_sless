.TH BLIND-MATRIX-ROTATE 1 blind
.SH NAME
blind-matrix-rotate - Create an affine 2D-transformation matrix for rotation
.SH SYNOPSIS
.B blind-matrix-rotate
[-cd]
.SH DESCRIPTION
.B blind-matrix-rotate
creates an affine 2D-transformation matrix for
rotation. The parameters for the matrix is read
in stdin in format of a blind video, one matrix
per frame in stdin created and printed to stdout
in format of a blind video.
.P
Each frame in stdin shall contain exactly 1 pixel,
this pixel holds the number of radians the image
is to be rotated clockwise around origo.
.P
The luma (encoding in the Y-channel, the second
channel) multiplied by the alpha (the fourth channel)
of the input pixels are used as the values. Each
values in the resulting matrices are stored
in all channels.
.SH OPTIONS
.TP
.B -c
Create different matrices for each channel. Use
values from each channel in stdin to create
matrices whose values are stored in the same
channels in stdout.
.TP
.B -d
Input angles in degrees rather than radians.
.SH NOTES
The image is rotated anti-clockwise if the Y-axis
grows upwards rather than downwards.
.P
Due to truncation error, when rotating a multiple
of 90 degrees, it is preferable to use
.B -d
with lets
.B blind-matrix-rotate
eliminate the error. If this is not done,
.BR blind-invert-matrix (1)
may return odd results.
.SH SEE ALSO
.BR blind (7),
.BR blind-from-text (1),
.BR blind-matrix-orthoproject (1),
.BR blind-matrix-reflect (1),
.BR blind-matrix-scale (1),
.BR blind-matrix-shear (1),
.BR blind-matrix-translate (1),
.BR blind-matrix-transpose (1),
.BR blind-multiply-matrices (1)
.SH AUTHORS
Mattias Andr√©e
.RI < maandree@kth.se >
