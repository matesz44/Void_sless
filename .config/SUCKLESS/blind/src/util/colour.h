/* See LICENSE file for copyright and license details. */
#include <math.h>

#define D65_XYY_X 0.312726871026564878786047074755
#define D65_XYY_Y 0.329023206641284038376227272238

#define D65_XYZ_X (D65_XYY_X / D65_XYY_Y)
#define D65_XYZ_Z (1 / D65_XYY_Y - 1 - D65_XYZ_X)

#define SRGB_ENCODE(TYPE, NAME_SUFFIX, MATH_SUFFIX)\
	static inline TYPE\
	srgb_encode##NAME_SUFFIX(TYPE t)\
	{\
		TYPE sign = 1;\
		if (t < 0) {\
			t = -t;\
			sign = -1;\
		}\
		t = t <= (TYPE)0.0031306684425217108\
			? (TYPE)12.92 * t\
			: (TYPE)1.055 * pow##MATH_SUFFIX(t, (TYPE)1.0 / (TYPE)2.4) - (TYPE)0.055;\
		return t * sign;\
	}
SRGB_ENCODE(double, _d,)
SRGB_ENCODE(float, _f, f)
#undef SRGB_ENCODE

#define SRGB_DECODE(TYPE, NAME_SUFFIX, MATH_SUFFIX)\
	static inline TYPE\
	srgb_decode##NAME_SUFFIX(TYPE t)\
	{\
		TYPE sign = 1;\
		if (t < 0) {\
			t = -t;\
			sign = -1;\
		}\
		t = t <= (TYPE)0.0031306684425217108 * (TYPE)12.92\
			? t / (TYPE)12.92\
			: pow##MATH_SUFFIX((t + (TYPE)0.055) / (TYPE)1.055, (TYPE)2.4);\
		return t * sign;\
	}
SRGB_DECODE(double, _d,)
SRGB_DECODE(float, _f, f)
#undef SRGB_DECODE


#define MATRIX_MULTIPLY_FUNCTION(FUNCTION, TYPE, R1C1, R1C2, R1C3, R2C1, R2C2, R2C3, R3C1, R3C2, R3C3)\
	static inline void\
	FUNCTION(TYPE ia, TYPE ib, TYPE ic, TYPE *oa, TYPE *ob, TYPE *oc)\
	{\
		*oa = (TYPE)(R1C1) * ia + (TYPE)(R1C2) * ib + (TYPE)(R1C3) * ic;\
		*ob = (TYPE)(R2C1) * ia + (TYPE)(R2C2) * ib + (TYPE)(R2C3) * ic;\
		*oc = (TYPE)(R3C1) * ia + (TYPE)(R3C2) * ib + (TYPE)(R3C3) * ic;\
	}
#define MATRIX_MULTIPLY_FUNCTIONS(FUNCTION_BASE, ...)\
	MATRIX_MULTIPLY_FUNCTION(FUNCTION_BASE##_d, double, __VA_ARGS__)\
	MATRIX_MULTIPLY_FUNCTION(FUNCTION_BASE##_f, float,  __VA_ARGS__)

MATRIX_MULTIPLY_FUNCTIONS(yuv_to_srgb,
			   0.99983946058747896756813133833929896354675292968750,
			  -0.00111314629257774910797706979792565107345581054688,
			   1.59561960249794831945280293439282104372978210449219,
			   0.99983946058762285247212275862693786621093750000000,
			  -0.39124374513994553126394748687744140625000000000000,
			  -0.81304201036561862814266987697919830679893493652344,
			   0.99983946058757433572594663928612135350704193115234,
			   2.01741786772377817982260239659808576107025146484375,
			   0.00115819721926166407932612401054939255118370056152)

MATRIX_MULTIPLY_FUNCTIONS(srgb_to_yuv,
			   0.29906158567044888174635275390755850821733474731445,
			   0.58707985442089483107963587826816365122795104980469,
			   0.11401912509812317519930502385250292718410491943359,
			  -0.14846813725490196067546833091910229995846748352051,
			  -0.29074754901960786490633381617954000830650329589844,
			   0.43921568627450979782622653146972879767417907714844,
			   0.43921568627450979782622653146972879767417907714844,
			  -0.36807598039215688734415721228288020938634872436523,
			  -0.07113970588235293823764493481576209887862205505371)

MATRIX_MULTIPLY_FUNCTIONS(ciexyz_to_srgb,
                           3.240446254647737500675930277794,
                          -1.537134761820080575134284117667,
                          -0.498530193022728718155178739835,
                          -0.969266606244679751469561779231,
                           1.876011959788370209167851498933,
                           0.041556042214430065351304932619,
                           0.055643503564352832235773149705,
                          -0.204026179735960239147729566866,
                           1.057226567722703292062647051353)

MATRIX_MULTIPLY_FUNCTIONS(srgb_to_ciexyz,
                          0.412457445582367576708548995157,
                          0.357575865245515878143578447634,
                          0.180437247826399665973085006954,
                          0.212673370378408277403536885686,
                          0.715151730491031756287156895269,
                          0.072174899130559869164791564344,
                          0.019333942761673460208893260415,
                          0.119191955081838593666354597644,
                          0.950302838552371742508739771438)

MATRIX_MULTIPLY_FUNCTIONS(scaled_yuv_to_ciexyz,
                           0.00001450092272326647052454150210731853576362482272 / 0.8552986953536278,
			   0.00000341281577174185336742326911385614351956974133,
			   0.00000560936853511406815494611324823814868523186306,
			   0.00001525657222228693664302541510569000138275441714 / 0.8552986953536278,
			  -0.00000205124661398017884712786061685019234346327721,
			  -0.00000369297336083484072815404791745308443751127925,
			   0.00001661179425452522781048517175328527173405745998 / 0.8552986953536278,
			   0.00002854205077959434113873959937279778387164697051,
			  -0.00000099119265445913120730111588868593841539222922)

MATRIX_MULTIPLY_FUNCTIONS(ciexyz_to_scaled_yuv,
                           26633.45812403910895227454602718353271484375   * 0.8552986953536278,
			   40527.367131481194519437849521636962890625     * 0.8552986953536278,
			    -272.0008243176007454167120158672332763671875 * 0.8552986953536278,
			  -11458.90154486896426533348858356475830078125,
			  -26662.3801805758339469321072101593017578125,
			   34490.0235254608633113093674182891845703125,
			  116394.099928013441967777907848358154296875,
			  -88546.58492295184987597167491912841796875,
			  -20281.0410136536011123098433017730712890625)

#undef MATRIX_MULTIPLY_FUNCTIONS
#undef MATRIX_MULTIPLY_FUNCTION
